# SPDX-License-Identifier: GPL-2.0
#
# KVM configuration
#

source "virt/lib/Kconfig"
source "virt/kvm/Kconfig"

menuconfig VIRTUALIZATION
	bool "Virtualization"
	help
	  Say Y here to get to see options for using your Linux host to run
	  other operating systems inside virtual machines (guests).
	  This option alone does not add any kernel code.

	  If you say N, all options in this submenu will be skipped and
	  disabled.

if VIRTUALIZATION

menuconfig KVM
	bool "Kernel-based Virtual Machine (KVM) support"
	depends on HAVE_KVM
	select MMU_NOTIFIER
	select PREEMPT_NOTIFIERS
	select HAVE_KVM_CPU_RELAX_INTERCEPT
	select HAVE_KVM_ARCH_TLB_FLUSH_ALL
	select KVM_MMIO
	select KVM_GENERIC_DIRTYLOG_READ_PROTECT
	select KVM_XFER_TO_GUEST_WORK
	select SRCU
	select KVM_VFIO
	select HAVE_KVM_EVENTFD
	select HAVE_KVM_IRQFD
	select HAVE_KVM_MSI
	select HAVE_KVM_IRQCHIP
	select HAVE_KVM_IRQ_ROUTING
	select IRQ_BYPASS_MANAGER
	select HAVE_KVM_IRQ_BYPASS
	select HAVE_KVM_VCPU_RUN_PID_CHANGE
	select SCHED_INFO
	select GUEST_PERF_EVENTS if PERF_EVENTS
	help
	  Support hosting virtualized guest machines.

	  If unsure, say N.

config NVHE_EL2_DEBUG
	bool "Debug mode for non-VHE EL2 object"
	depends on KVM
	help
	  Say Y here to enable the debug mode for the non-VHE KVM EL2 object.
	  Failure reports will BUG() in the hypervisor. This is intended for
	  local EL2 hypervisor development.

	  If unsure, say N.

config PROTECTED_NVHE_STACKTRACE
	bool "Protected KVM hypervisor stacktraces"
	depends on NVHE_EL2_DEBUG
	default n
	help
	  Say Y here to enable pKVM hypervisor stacktraces on hyp_panic()

	  If using protected nVHE mode, but cannot afford the associated
	  memory cost (less than 0.75 page per CPU) of pKVM stacktraces,
	  say N.

	  If unsure, or not using protected nVHE (pKVM), say N.

config PKVM_MODULE_PATH
	string "Path to pKVM modules"
	default ""
	help
	  Directory where the pKVM modules are found. If empty, the modules
	  will be searched into the default path /lib/modules/<uname>.

config KVM_ARM_HYP_DEBUG_UART
	bool "Hack up some basic UART functionality at EL2"
	depends on KVM
	default n
	help
	  Enables debug traces from EL2.

	  if unsure, say N.

config KVM_ARM_HYP_DEBUG_UART_ADDR
	hex "Physical address of the PL011 for EL2 to use"
	depends on KVM_ARM_HYP_DEBUG_UART
	default 0x0900000
	help
	  Physical address of UART in the host.

config KVM_ARM_HYP_DEBUG_GDB_SYMBOLS
	bool "Enables symbols for gdb in EL2"
	depends on KVM_ARM_HYP_DEBUG_UART
	default n
	help
	  Say Y here to enable loading symbols for gdb onEL2.

	  if unsure, say N.

config KVM_ARM_HYP_DEBUG_HYP_CALLS
	bool "Enables debugging calls to EL2"
	depends on KVM
	default n
	help
	  Say Y here to enable debugging calls from EL1 to EL2.

	  if unsure, say N.

config KVM_ARM_HYP_DEBUG_RAMLOG
	bool "Presense of a hypervisor ramlog"
	depends on KVM_ARM_HYP_DEBUG_UART
	default n
	help
	  Hypervisor ramlog collects register dumps and other data separately from
	  a kernel log. Hypervisor log is encrypted with a chacha20 cipher.

	  if unsure, say N.

config KVM_ARM_HYP_DEBUG_RAMLOG_DIRECT_PRINT
	bool "Print hyp log messages to console output"
	depends on KVM_ARM_HYP_DEBUG_RAMLOG
	default n
	help
	  For debug purposes it is convenient to read the log instantly
	  in console, the option just enables additional output and does not
	  reject storing and encrypting the log

	  if unsure, say N.

endif # VIRTUALIZATION
